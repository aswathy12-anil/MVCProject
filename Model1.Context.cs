//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVC_projectEntities : DbContext
    {
        public MVC_projectEntities()
            : base("name=MVC_projectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Application_tab> Application_tab { get; set; }
        public virtual DbSet<Comp_reg> Comp_reg { get; set; }
        public virtual DbSet<Login_tab> Login_tab { get; set; }
        public virtual DbSet<User_reg> User_reg { get; set; }
        public virtual DbSet<Vacc_table> Vacc_table { get; set; }
    
        public virtual int sp_comp(Nullable<int> cid, string cna, string email, string ph, string loc, string web)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("web", web) :
                new ObjectParameter("web", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_comp", cidParameter, cnaParameter, emailParameter, phParameter, locParameter, webParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_logincountId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_logincountId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual int sp_logininsert(Nullable<int> rid, string una, string pw, string utype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_logininsert", ridParameter, unaParameter, pwParameter, utypeParameter);
        }
    
        public virtual ObjectResult<string> sp_logintype(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_logintype", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_maxlogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_maxlogin");
        }
    
        public virtual int sp_userreg(Nullable<int> uid, string uname, Nullable<int> ag, string addr, string email, string phn, string loc, string gen, string qual, string ski, Nullable<int> exp, string ph)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phnParameter = phn != null ?
                new ObjectParameter("phn", phn) :
                new ObjectParameter("phn", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var skiParameter = ski != null ?
                new ObjectParameter("ski", ski) :
                new ObjectParameter("ski", typeof(string));
    
            var expParameter = exp.HasValue ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(int));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userreg", uidParameter, unameParameter, agParameter, addrParameter, emailParameter, phnParameter, locParameter, genParameter, qualParameter, skiParameter, expParameter, phParameter);
        }
    
        public virtual int sp_vaccancy(Nullable<int> comId, string jobtit, string jobdes, string skills, Nullable<int> expe, string loc, string salran, string jobtype, Nullable<System.DateTime> postdate, Nullable<System.DateTime> lastdate, string sts)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("comId", comId) :
                new ObjectParameter("comId", typeof(int));
    
            var jobtitParameter = jobtit != null ?
                new ObjectParameter("jobtit", jobtit) :
                new ObjectParameter("jobtit", typeof(string));
    
            var jobdesParameter = jobdes != null ?
                new ObjectParameter("jobdes", jobdes) :
                new ObjectParameter("jobdes", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var expeParameter = expe.HasValue ?
                new ObjectParameter("expe", expe) :
                new ObjectParameter("expe", typeof(int));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var salranParameter = salran != null ?
                new ObjectParameter("salran", salran) :
                new ObjectParameter("salran", typeof(string));
    
            var jobtypeParameter = jobtype != null ?
                new ObjectParameter("jobtype", jobtype) :
                new ObjectParameter("jobtype", typeof(string));
    
            var postdateParameter = postdate.HasValue ?
                new ObjectParameter("postdate", postdate) :
                new ObjectParameter("postdate", typeof(System.DateTime));
    
            var lastdateParameter = lastdate.HasValue ?
                new ObjectParameter("lastdate", lastdate) :
                new ObjectParameter("lastdate", typeof(System.DateTime));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vaccancy", comIdParameter, jobtitParameter, jobdesParameter, skillsParameter, expeParameter, locParameter, salranParameter, jobtypeParameter, postdateParameter, lastdateParameter, stsParameter);
        }
    
        public virtual int sp_jobsearch(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearch", qryParameter);
        }
    
        public virtual int sp_UserApp(Nullable<int> jobId, Nullable<int> userId, Nullable<System.DateTime> appdate, string resume, string status)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var appdateParameter = appdate.HasValue ?
                new ObjectParameter("appdate", appdate) :
                new ObjectParameter("appdate", typeof(System.DateTime));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("Resume", resume) :
                new ObjectParameter("Resume", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserApp", jobIdParameter, userIdParameter, appdateParameter, resumeParameter, statusParameter);
        }
    }
}
